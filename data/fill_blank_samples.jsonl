{"context": "Design patterns are typical solutions to common problems in software design. Each pattern is like a blueprint that you can customize to solve a particular design problem in your code.", "question": "Design patterns are ______ that developers can customize to solve design problems in their code.", "answer": "typical solutions to common problems", "type": "Fill in the Blank"}
{"context": "The Observer pattern defines a one-to-many dependency between objects so that when one object changes state, all its dependents are notified and updated automatically.", "question": "In the Observer pattern, when an object changes state, all its dependents are ______ automatically.", "answer": "notified and updated", "type": "Fill in the Blank"}
{"context": "The Single Responsibility Principle (SRP) states that a class should have only one reason to change, meaning it should have only one responsibility.", "question": "According to the Single Responsibility Principle, a class should have only one ______.", "answer": "responsibility", "type": "Fill in the Blank"}
{"context": "The Factory Method Pattern defines an interface for creating an object, but lets subclasses decide which class to instantiate. It allows a class to defer instantiation to subclasses.", "question": "The Factory Method Pattern allows a class to defer ______ to subclasses.", "answer": "instantiation", "type": "Fill in the Blank"}
{"context": "The Open/Closed Principle states that software entities should be open for extension but closed for modification. This means you should be able to add new functionality without changing existing code.", "question": "The Open/Closed Principle states that software entities should be open for ______ but closed for modification.", "answer": "extension", "type": "Fill in the Blank"}
{"context": "Neural networks consist of artificial neurons organized in layers, capable of learning patterns from data. The input layer receives data, hidden layers process it, and the output layer produces results.", "question": "In neural networks, artificial neurons are organized in ______ to process data and produce results.", "answer": "layers", "type": "Fill in the Blank"}
{"context": "Supervised Learning is where models learn from labeled training data to predict outputs for unseen data. Key components include features, labels, and a loss function to measure prediction errors.", "question": "In Supervised Learning, models learn from ______ to predict outputs for unseen data.", "answer": "labeled training data", "type": "Fill in the Blank"}
{"context": "RESTful APIs use HTTP requests to perform CRUD (Create, Read, Update, Delete) operations. They are stateless, meaning each request from client to server must contain all information needed to understand and process the request.", "question": "RESTful APIs are ______, meaning each request must contain all information needed to understand and process it.", "answer": "stateless", "type": "Fill in the Blank"}
{"context": "A hash table is a data structure that implements an associative array abstract data type, a structure that can map keys to values. A hash table uses a hash function to compute an index into an array of buckets or slots.", "question": "A hash table uses a ______ to compute an index into an array of buckets or slots.", "answer": "hash function", "type": "Fill in the Blank"}
{"context": "The Model-View-Controller (MVC) is an architectural pattern that separates an application into three main logical components: the model, the view, and the controller.", "question": "The MVC pattern separates an application into three components: the model, the ______, and the controller.", "answer": "view", "type": "Fill in the Blank"}
{"context": "A depth-first search (DFS) is an algorithm for traversing or searching tree or graph data structures. It starts at the root and explores as far as possible along each branch before backtracking.", "question": "A depth-first search algorithm explores as far as possible along each branch before ______.", "answer": "backtracking", "type": "Fill in the Blank"}
{"context": "Agile methodology is an approach to software development that emphasizes incremental delivery, team collaboration, continual planning, and continual learning. It focuses on delivering value early and often.", "question": "Agile methodology emphasizes ______ delivery of software rather than delivering all features at once.", "answer": "incremental", "type": "Fill in the Blank"}
{"context": "Dependency Injection is a design pattern in which an object receives other objects that it depends on. These other objects are called dependencies.", "question": "In Dependency Injection, an object ______ other objects that it depends on rather than creating them internally.", "answer": "receives", "type": "Fill in the Blank"}
{"context": "Test-Driven Development (TDD) is a software development process relying on a very short development cycle: first, the developer writes a failing automated test case for a new feature, then produces the minimum amount of code to pass that test, and finally refactors the code to meet acceptable standards.", "question": "In Test-Driven Development, the developer first writes a ______ test case before writing any production code.", "answer": "failing automated", "type": "Fill in the Blank"}
{"context": "A binary search algorithm finds the position of a target value within a sorted array. It compares the target value to the middle element of the array; if they are unequal, the half in which the target cannot lie is eliminated and the search continues on the remaining half.", "question": "A binary search algorithm requires the array to be ______ before it can work correctly.", "answer": "sorted", "type": "Fill in the Blank"}
{"context": "Microservices architecture is an approach to developing an application as a collection of small services, each running in its own process and communicating with lightweight mechanisms. Each service is built around business capabilities and can be deployed independently.", "question": "In a microservices architecture, each service can be ______ independently of the others.", "answer": "deployed", "type": "Fill in the Blank"}
{"context": "Containerization, like Docker, packages an application with its dependencies, libraries, and other binaries, and with configurations needed to run it. This eliminates the 'it works on my machine' problem.", "question": "Containerization eliminates the '______ problem' by packaging applications with their dependencies.", "answer": "it works on my machine", "type": "Fill in the Blank"}
{"context": "Big O notation is used to classify algorithms according to how their run time or space requirements grow as the input size grows. It provides an upper bound on the growth rate of the algorithm.", "question": "Big O notation classifies algorithms according to how their ______ grow as the input size increases.", "answer": "run time or space requirements", "type": "Fill in the Blank"}
{"context": "The Liskov Substitution Principle states that objects of a superclass should be replaceable with objects of a subclass without affecting the correctness of the program. This is a fundamental principle of object-oriented design.", "question": "The Liskov Substitution Principle states that objects of a ______ should be replaceable with objects of a subclass without affecting program correctness.", "answer": "superclass", "type": "Fill in the Blank"}
{"context": "SQL injection is a code injection technique used to attack data-driven applications. It exploits security vulnerabilities in an application's software by inserting malicious SQL statements into entry fields.", "question": "SQL injection attacks work by inserting ______ into entry fields to exploit application vulnerabilities.", "answer": "malicious SQL statements", "type": "Fill in the Blank"}